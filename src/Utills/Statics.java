/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Utills;

/**
 *
 * @author TheJenos
 */
public class Statics {
    public static String js = "function Datatype(e){switch(typeof e){case\"string\":return e.includes(\"::\")?e:\"String::\"+e;case\"number\":return\"int::\"+e;case\"boolean\":return\"boolean::\"+e;case\"null\":return\"null\";default:return\"json::\"+JSON.stringify(e)}}function handlefile(e){var t=\"\",a=e.getResponseHeader(\"Content-Disposition\");if(a&&-1!==a.indexOf(\"attachment\")){var r=/filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/.exec(a);null!=r&&r[1]&&(t=r[1].replace(/['\"]/g,\"\"))}var s=window.URL.createObjectURL(e.response),n=document.createElement(\"a\");n.href=s,n.download=t,document.body.appendChild(n),n.click()}function inputstoScope(e,t){for(var a in e)t[a]=e[a]}function Scopetoinputs(e){var t={};for(var a in e)a.startsWith(\"$\")||\"function\"==typeof e[a]||(t[a]=angular.copy(e[a]));return JSON.stringify(t)}function erlog(e,t){var a=JSON.parse(t);if(a.run=e,a.ErrorMsg)try{showError(a.ErrorMsg)}catch(e){console.log(a.ErrorMsg)}}function JSframwork(e,t){this.filename=e,this.inputs=t;var a=this;this.methodsreadback=function(e){for(var t=0;t<e.Methods.length;t++){var r=e.Methods[t].endsWith(\"_File\");if(e.Methods[t].startsWith(\"Multi_\")){var s=e.Methods[t].replace(\"Multi_\",\"\");r&&(s=s.replace(\"_File\",\"\")),a[s]=new Function(\"                    var oldcallback = arguments[arguments.length-1];                    var fun = (typeof oldcallback === 'function');                    var datagg = arguments[0];                    var data = new FormData();                    for ( var key in datagg ) {                        data.append(key, datagg[key]['$file']?datagg[key]['$file']:datagg[key]);                    }                    data.append('run','\"+s+\"');                    data.append('inputs',Scopetoinputs(this.inputs));                    data.append('parent',Scopetoinputs(this.inputs.$parent));                    var callback = function (respdata,scope){                        if (typeof(respdata.response)=='object') {                            handlefile(respdata);                            oldcallback(true);                        }else{                            if(respdata.responseText.length<2) return oldcallback();                            var obj = JSON.parse(respdata.responseText);                            erlog('\"+s+\"',respdata.responseText);                            inputstoScope(obj.parent,scope.$parent);                            inputstoScope(obj.scope,scope);scope.$apply();                            oldcallback(obj.Return);                        }                    };                    var requset = new XMLHttpRequest();                    \"+(r?\"requset.responseType='blob';\":\"\")+\"                    requset.onreadystatechange = (function(scope) { return function () {                        if (requset.status == 200 && requset.readyState == 4) {                            if(fun){                                callback(requset,scope);                            }                        }                    };)(this.inputs);                    requset.open('POST','\"+a.filename+\"', true);                    requset.send(data);                \")}else if(e.Methods[t].startsWith(\"Sync_\")){s=e.Methods[t].replace(\"Sync_\",\"\");r&&(s=s.replace(\"_File\",\"\")),a[s]=new Function(\"                    var paras = '';                    for (var i = 0; i < arguments.length; i++){                       paras += '&para[]='+Datatype(arguments[i]);                    }                    var data = 'run=\"+s+\"'+paras+'&inputs='+Scopetoinputs(this.inputs)+'&parent='+Scopetoinputs(this.inputs.$parent;                    var requset = new XMLHttpRequest();                    \"+(r?\"requset.responseType='blob';\":\"\")+\"                    requset.open('POST','\"+a.filename+\"', false);                    requset.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');                    requset.send(data);                    if (typeof(requset.response)=='object') {                        handlefile(requset);                        return true;                    }else{                        erlog('\"+s+\"',requset.responseText);                        var obj = JSON.parse(respdata.responseText);                        inputstoScope(obj.parent,this.inputs.$parent);                        inputstoScope(obj.scope,this.inputs);this.inputs.$apply();                        return JSON.parse(requset.responseText).Return;                    }                \")}else{s=e.Methods[t];r&&(s=s.replace(\"_File\",\"\")),a[s]=new Function(\"                    var paras = '';                    var oldcallback = arguments[arguments.length-1];                    var fun = (typeof oldcallback === 'function');                    var callback = function (respdata,scope){                        if (typeof(respdata.response)=='object') {                            handlefile(respdata);                            oldcallback(true);                        }else{                            if(respdata.responseText.length<2) return oldcallback();                            var obj = JSON.parse(respdata.responseText);                            erlog('\"+s+\"',respdata.responseText);                            inputstoScope(obj.parent,scope.$parent);                            inputstoScope(obj.scope,scope);scope.$apply();                            oldcallback(obj.Return);                        }                    };                    if(fun){                        for (var i = 0; i < arguments.length-1; i++){                            paras += '&para[]='+Datatype(arguments[i]);                        }                    }else{                        for (var i = 0; i < arguments.length; i++){                            paras += '&para[]='+Datatype(arguments[i]);                        }                    }                    var data = 'run=\"+s+\"'+paras+'&inputs='+Scopetoinputs(this.inputs)+'&parent='+Scopetoinputs(this.inputs.$parent);                    var requset = new XMLHttpRequest();                    \"+(r?\"requset.responseType='blob';\":\"\")+\"                    requset.onreadystatechange = (function(scope) { return function () {                        if (requset.status == 200 && requset.readyState == 4) {                            if(fun){                                callback(requset,scope);                            }                        }                    };})(this.inputs);                    requset.open('POST','\"+a.filename+\"', true);                    requset.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');                    requset.send(data);                \")}}},this.getMethods=function(){var e=new XMLHttpRequest;e.onreadystatechange=function(){if(200==e.status&&4==e.readyState){var t=e.responseText;a.methodsreadback(JSON.parse(t))}},e.open(\"GET\",this.filename,!1),e.send()},this.getMethods()}";
}
